import { Service } from '@common/models/service';
import { VisitReason } from '@common/models/visit-reason';
import { Room } from '@common/models/room';
import { Entity } from '@common/interfaces/Entity';
import { EntityWithSysName } from '@common/interfaces/EntityWithSysName';
import { Measurement } from '@common/interfaces/Measurement';
import { MediaFile } from '@common/models/media-file';
import { CorsetOrder } from '@common/models/product-order/corset-order';
import { CorsetMeasurement } from '@common/interfaces/product-order/Corset-measurement';
import { ProthesisVkMeasurement } from '@common/interfaces/product-order/Prothesis-vk-measurement';
import { ActMtk } from '@common/models/act-mtk';
import { CommonFile } from '@common/models/common-file';
import { DealResponse } from '@common/interfaces/Deal-response';
import { ApparatLegMeasurement } from '@common/models/product-order/apparatus-order/apparat-leg-measurement';
import {ProthesisNkMeasurement} from '@modules/patients/patient/patient-visits/visit-meansurements/protez-nk-device-measurement/prothesis-nk-measurement';

export interface VisitResponse {
  branch_Id: string;
  actualCorsetWearing: string;
  anamnesis: string;
  appointmentId: string;
  acceptXRay: boolean;
  attendantDiagnosis: string;
  comment: string;
  complaints: string;
  contactId: string;
  corsetMeasurement?: CorsetMeasurement;
  prothesisVkMeasurement?: ProthesisVkMeasurement;
  prothesisNkMeasurement?: ProthesisNkMeasurement;
  apparatLegMeasurement?: ApparatLegMeasurement;
  createdBy: Entity;
  createdDate: string;
  dateTime: string;
  dateTimeEnd: string;
  dateTimeStart: string;
  nextVisitDate: string;
  deal: DealResponse;
  diagnosis1: EntityWithSysName;
  diagnosis2: EntityWithSysName;
  disabilityGroup: EntityWithSysName;
  doctor: Entity;
  growth: number;
  amputationSide: string;
  footSize: number;
  healingDynamic: Entity;
  healingPlan: string;
  id: string;
  iprPrp: EntityWithSysName;
  iprPrpActualDate: Date;
  iprPrpComment: string;
  stumpVicesVk?: Entity;
  lastModifiedBy: Entity;
  lastModifiedDate: string;
  measurements: Measurement[];
  medicalService: Service;
  mkb10: Entity;
  recommendedCorsetWearing: string;
  room: Room;
  visitReason: VisitReason;
  weight: number;
  photos: MediaFile[];
  videos: MediaFile[];
  products: CorsetOrder[];
  actsMtk: ActMtk[];
  otherFiles: CommonFile[];
}
