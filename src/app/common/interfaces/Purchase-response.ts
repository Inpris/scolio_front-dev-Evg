import { PurchaseType } from '../models/purchase-type';
import { PurchaseTenderPlatform } from '../models/purchase-tender-platform';
import { PurchaseResponsible } from '../models/purchase-responsible';
import { CustomerResponse } from '@common/interfaces/Customer-response';
import { Entity } from '@common/interfaces/Entity';
import { PurchaseAttachment } from '@common/interfaces/Purchase-attachment';
import { Status } from '@common/interfaces/Status';
import { DocumentResponse } from '@common/interfaces/Document-response';

export interface PurchaseResponse {
  id: string;
  allDevicesCount: number;
  allDevicesGiven: number;
  allDevicesInWork: number;
  auctionDate: string;
  auctionDateLocal: string;
  bidDateTimeEnd: string;
  bidReviewDateTimeEnd: string;
  changeStatusDateTime: string;
  contractCompleteDate: string;
  contractDate: string;
  contractExecutionDate: string;
  contractNumber: string;
  contractPriceDeclinePercent: number;
  contractPriceDeclineSum: number;
  contractProvision: number;
  createdBy: Entity;
  createdDate: string;
  customer: CustomerResponse;
  deadline: string;
  files: PurchaseAttachment[];
  finalContractPrice: number;
  includeResidenceCompensationMaxDays: number;
  includeResidenceCompensationMaxSum: number;
  includeResidenceCompensationSum: number;
  isDeleted: boolean;
  isReturnProvision: boolean;
  isWin: boolean;
  lastModifiedBy: Entity;
  lastModifiedDate: string;
  note: string;
  noticeNumber: string;
  organizationRequisites: string;
  patients: string[];
  paymentDate: string;
  paymentOrderNumber: string;
  penalties: string;
  purchaseCode: string;
  purchaseObject: string;
  purchaseStatus: Status;
  purchaseType: PurchaseType;
  purchaseUrl: string;
  registryNumber: string;
  responsible: PurchaseResponsible;
  returnDate: string;
  returnProvisionNotificationDate: string;
  serviceDeliveryDate: string;
  serviceDeliveryPlace: string;
  startMaxContractPrice: number;
  tenderPlatform: PurchaseTenderPlatform;
  purchaseChapters: Entity[];
  documents: DocumentResponse[];
}
